using SeeSign
using Documenter
using Literate

DocMeta.setdocmeta!(SeeSign, :DocTestSetup, :(using SeeSign); recursive=true)

# Check if we should regenerate Literate files
fresh = "--fresh" in ARGS

# Function to process markdown files generated by Literate
function postprocess_markdown(content)
    # Adjust image paths to point to the literate subdirectory
    content = replace(content, r"!\[([^\]]*)\]\(([^)]+)\.png\)" => s"![\1](literate/\2.png)")
    return content
end

# Process Literate files if any exist in the future
literate_dir = joinpath(@__DIR__, "literate")
src_dir = joinpath(@__DIR__, "src")

# Create literate output directory if it doesn't exist
if !isdir(literate_dir)
    mkdir(literate_dir)
end

# Process Literate files
literate_src_dir = joinpath(@__DIR__, "literate_src")
if isdir(literate_src_dir)
    jlfiles = [f for f in readdir(literate_src_dir) if endswith(f, ".jl")]
else
    jlfiles = []
end
for readfile in jlfiles
    input_file = joinpath(literate_src_dir, readfile)
    output_file = joinpath(src_dir, replace(readfile, ".jl" => ".md"))
    if fresh || !isfile(output_file) || mtime(input_file) > mtime(output_file)
        println("Processing Literate file: $readfile")
        Literate.markdown(input_file, src_dir; 
                            postprocess=postprocess_markdown,
                            execute=true)
        
        # Move any generated images to the literate subdirectory
        for img_file in readdir(src_dir)
            if endswith(img_file, ".png") || endswith(img_file, ".jpg") || endswith(img_file, ".svg")
                src_path = joinpath(src_dir, img_file)
                dst_path = joinpath(literate_dir, img_file)
                if isfile(src_path)
                    mv(src_path, dst_path, force=true)
                end
            end
        end
    end
end

makedocs(;
    modules=[SeeSign],
    authors="Andrew Dolgert <github@dolgert.com>",
    sitename="SeeSign.jl",
    format=Documenter.HTML(;
        prettyurls=get(ENV, "CI", nothing) == "true",
        canonical="https://adolgert.github.io/SeeSign.jl",
        edit_link="main",
        assets=String[],
    ),
    pages=[
        "Home" => "index.md",
        "Examples" => [
            "Getting Started" => "getting_started.md",
        ],
        "Development" => [
            "Plan" => "plan.md",
            "Event Updates" => "event_update.md",
        ],
    ],
)

deploydocs(;
    repo="github.com/adolgert/SeeSign.jl",
    devbranch="main",
)
